// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Telephone.Models;

namespace Telephone.Migrations
{
    [DbContext(typeof(telephoneContext))]
    [Migration("20200418201945_AddingDateFields")]
    partial class AddingDateFields
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Telephone.Models.City", b =>
                {
                    b.Property<int>("IdCity")
                        .HasColumnName("Id_city")
                        .HasColumnType("int");

                    b.Property<string>("DiscountPercent")
                        .HasColumnName("discount_percent")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<string>("NameCity")
                        .HasColumnName("name_city")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RateAm")
                        .HasColumnName("rate_am")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<string>("RatePm")
                        .HasColumnName("rate_pm")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.HasKey("IdCity")
                        .HasName("PK__City__5E31E358DB595405");

                    b.ToTable("City");
                });

            modelBuilder.Entity("Telephone.Models.Cost", b =>
                {
                    b.Property<decimal?>("Cost1")
                        .HasColumnName("cost")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<decimal?>("Discount")
                        .HasColumnName("discount")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int>("IdTalk")
                        .HasColumnName("Id_talk")
                        .HasColumnType("int");

                    b.HasIndex("IdTalk");

                    b.ToTable("Cost");
                });

            modelBuilder.Entity("Telephone.Models.Subscribe", b =>
                {
                    b.Property<int>("IdAbonent")
                        .HasColumnName("Id_abonent")
                        .HasColumnType("int");

                    b.Property<string>("BankAccount")
                        .IsRequired()
                        .HasColumnName("bank_account")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<string>("Inpp")
                        .IsRequired()
                        .HasColumnName("INPP")
                        .HasColumnType("nchar(15)")
                        .IsFixedLength(true)
                        .HasMaxLength(15);

                    b.Property<string>("NumberPhone")
                        .IsRequired()
                        .HasColumnName("number_phone")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnName("street")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("IdAbonent")
                        .HasName("PK__Subscrib__FC7E124B42073673");

                    b.ToTable("Subscribe");
                });

            modelBuilder.Entity("Telephone.Models.Talk", b =>
                {
                    b.Property<int>("IdTalk")
                        .HasColumnName("Id_talk")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Ddate")
                        .HasColumnName("ddate")
                        .HasColumnType("datetime");

                    b.Property<int>("IdAbonent")
                        .HasColumnName("Id_abonent")
                        .HasColumnType("int");

                    b.Property<int>("IdCity")
                        .HasColumnName("Id_city")
                        .HasColumnType("int");

                    b.Property<string>("TimeOfDate")
                        .HasColumnName("time_of_date")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("TimeTalk")
                        .HasColumnName("time_talk")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.HasKey("IdTalk")
                        .HasName("PK__Talk__629752E85ED897B0");

                    b.HasIndex("IdAbonent");

                    b.HasIndex("IdCity");

                    b.ToTable("Talk");
                });

            modelBuilder.Entity("Telephone.Models.Cost", b =>
                {
                    b.HasOne("Telephone.Models.Talk", "IdTalkNavigation")
                        .WithMany()
                        .HasForeignKey("IdTalk")
                        .HasConstraintName("FK__Cost__Id_talk__2C3393D0")
                        .IsRequired();
                });

            modelBuilder.Entity("Telephone.Models.Talk", b =>
                {
                    b.HasOne("Telephone.Models.Subscribe", "IdAbonentNavigation")
                        .WithMany("Talk")
                        .HasForeignKey("IdAbonent")
                        .HasConstraintName("FK__Talk__Id_abonent__2A4B4B5E")
                        .IsRequired();

                    b.HasOne("Telephone.Models.City", "IdCityNavigation")
                        .WithMany("Talk")
                        .HasForeignKey("IdCity")
                        .HasConstraintName("FK__Talk__Id_city__2B3F6F97")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
